"""empty message

Revision ID: 917b6d7413a0
Revises: 398eec76ed47
Create Date: 2023-05-17 17:54:04.751013

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '917b6d7413a0'
down_revision = '398eec76ed47'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('member_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_type', sa.Integer(), nullable=False),
    sa.Column('user_or_provider_id', sa.Integer(), nullable=False),
    sa.Column('member_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('member_name')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_main', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('street', sa.String(length=100), nullable=True),
    sa.Column('apartment', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['member_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provider_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('has_certificate', sa.Boolean(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('availability_binary_string', sa.String(length=21), nullable=False),
    sa.Column('service_radius', sa.Integer(), nullable=False),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('ratings_counter', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=True),
    sa.Column('avatar_images', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['member_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=True),
    sa.Column('must_have_certificate', sa.Boolean(), nullable=False),
    sa.Column('required_experience', sa.Integer(), nullable=False),
    sa.Column('required_rating', sa.Float(), nullable=True),
    sa.Column('avatar_images', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['member_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_of_notification', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('publishing_date_time', sa.DateTime(), nullable=False),
    sa.Column('message', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['provider_profile.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time_slot', sa.Integer(), nullable=True),
    sa.Column('recurrence', sa.Integer(), nullable=True),
    sa.Column('service', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['provider_profile.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('service_request')
    op.drop_table('notification')
    op.drop_table('user_profile')
    op.drop_table('provider_profile')
    op.drop_table('address')
    op.drop_table('member_account')
    # ### end Alembic commands ###
